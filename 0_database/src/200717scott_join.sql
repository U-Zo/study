-- CATASIAN JOIN
SELECT EMPNO, ENAME, JOB, DEPT.DEPTNO, DNAME, LOC
FROM DEPT, EMP
ORDER BY EMPNO;

-- EQUI JOIN
SELECT EMP.EMPNO, EMP.ENAME, DEPT.DNAME, DEPT.LOC
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO;
-- EQUI JOIN WITH ALIAS
SELECT E.EMPNO, E.ENAME, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

SELECT E.EMPNO, E.ENAME, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND E.EMPNO = 7900;

-- NON-EQUI JOIN
SELECT e.EMPNO, e.ENAME, e.JOB, e.SAL,
    s.GRADE, s.LOSAL, s.HISAL
FROM SALGRADE s, EMP e
WHERE e.SAL BETWEEN s.LOSAL AND s.HISAL
    AND e.DEPTNO = 10;

SELECT * FROM EMP ORDER BY DEPTNO;
SELECT * FROM DEPT;

-- OUTER JOIN
SELECT e.EMPNO, e.ENAME, e.JOB, e.DEPTNO,
    d.DEPTNO, d.DNAME, d.LOC
FROM DEPT d, EMP e
WHERE d.DEPTNO = e.DEPTNO(+);

-- SELF JOIN
SELECT e1.ENAME 사원, e2.ENAME 관리자
FROM EMP e1, EMP e2
WHERE e1.MGR = e2.EMPNO(+);

-- ANSI CROSS JOIN
SELECT EMPNO, ENAME, DNAME
FROM DEPT
CROSS JOIN EMP;

-- ANSI NATURAL JOIN
SELECT EMPNO, ENAME, DNAME, LOC
FROM EMP
NATURAL JOIN DEPT;

-- ANSI JOIN USING
SELECT EMPNO, ENAME, DNAME, LOC
FROM EMP
JOIN DEPT
USING (DEPTNO);

-- JOIN~ON JOIN
SELECT EMPNO, ENAME, DNAME, LOC
FROM EMP
JOIN DEPT
ON EMP.DEPTNO = DEPT.DEPTNO
AND DEPT.DEPTNO = 10;

SELECT EMPNO, ENAME, DNAME, LOC
FROM EMP
JOIN DEPT
ON EMP.DEPTNO = DEPT.DEPTNO
WHERE DEPT.DEPTNO = 10;

SELECT EMPNO, ENAME, DNAME, SAL, GRADE
FROM EMP e
JOIN DEPT d
ON e.DEPTNO = d.DEPTNO
JOIN SALGRADE s
ON e.SAL BETWEEN s.LOSAL AND s.HISAL;

SELECT EMPNO, ENAME, DNAME, SAL
FROM EMP e
JOIN DEPT d
ON e.DEPTNO = d.DEPTNO
WHERE SAL IN 800;

SELECT e.ENAME 사원, d.ENAME 관리자
FROM EMP e
JOIN EMP d
ON e.MGR = d.EMPNO;

-- ANSI OUTER JOIN
SELECT EMPNO, ENAME, DNAME
FROM DEPT LEFT OUTER JOIN EMP
ON DEPT.DEPTNO = EMP.DEPTNO;

INSERT INTO EMP
VALUES(9000, 'TEST', 'SALES', 7499, '90/01/01', 400, NULL, NULL);

SELECT EMPNO, ENAME, DNAME
FROM DEPT FULL OUTER JOIN EMP
ON DEPT.DEPTNO = EMP.DEPTNO;

-- ORACLE
-- 1
SELECT EMPNO, ENAME, e.DEPTNO, DNAME
FROM EMP e, DEPT d
WHERE e.DEPTNO = d.DEPTNO
ORDER BY ENAME;

SELECT EMPNO, ENAME, DEPTNO, DNAME
FROM EMP
NATURAL JOIN DEPT;
-- 2
SELECT EMPNO, ENAME, SAL, DNAME
FROM EMP e, DEPT d
WHERE e.DEPTNO = d.DEPTNO
    AND SAL >= 2000
ORDER BY SAL DESC;

SELECT EMPNO, ENAME, SAL, DNAME
FROM EMP
NATURAL JOIN DEPT
WHERE SAL >= 2000
ORDER BY SAL DESC;
-- 3
SELECT EMPNO, ENAME, JOB, SAL, DNAME
FROM EMP e, DEPT d
WHERE e.DEPTNO = d.DEPTNO
    AND JOB = 'MANAGER'
    AND SAL >= 2500
ORDER BY EMPNO;

SELECT EMPNO, ENAME, JOB, SAL, DNAME
FROM EMP
NATURAL JOIN DEPT
WHERE JOB = 'MANAGER'
    AND SAL >= 2500
ORDER BY EMPNO;
-- 4
SELECT EMPNO, ENAME, SAL, GRADE
FROM EMP, SALGRADE
WHERE SAL BETWEEN LOSAL AND HISAL
    AND GRADE = 4
ORDER BY SAL DESC;
-- 5
SELECT EMPNO, ENAME, DNAME, SAL, GRADE
FROM EMP e, DEPT d, SALGRADE
WHERE e.DEPTNO = d.DEPTNO
    AND SAL BETWEEN LOSAL AND HISAL
ORDER BY GRADE DESC;
-- 6
SELECT e1.ENAME 사원, e2.ENAME 관리자
FROM EMP e1, EMP e2
WHERE e1.MGR = e2.EMPNO;
-- 7
SELECT e1.ENAME 사원, e2.ENAME 관리자, e3.ENAME 상위관리자
FROM EMP e1, EMP e2, EMP e3
WHERE e1.MGR = e2.EMPNO
    AND e2.MGR = e3.EMPNO;
-- 8
SELECT e1.ENAME 사원, e2.ENAME 관리자, e3.ENAME 상위관리자
FROM EMP e1, EMP e2, EMP e3
WHERE e1.MGR = e2.EMPNO(+)
    AND e2.MGR = e3.EMPNO(+);
-- 9
SELECT DNAME, ENAME
FROM DEPT d, EMP e
WHERE d.DEPTNO = 20
    AND d.DEPTNO = e.DEPTNO;
-- 10
SELECT ENAME, COMM, DNAME
FROM EMP e, DEPT d
WHERE e.DEPTNO = d.DEPTNO
    AND COMM IS NOT NULL;
-- 11
SELECT ENAME, DNAME
FROM EMP e, DEPT d
WHERE e.DEPTNO = d.DEPTNO
    AND ENAME LIKE '%A%';
-- 12
SELECT ENAME, SAL, HIREDATE, COMM
FROM EMP e, DEPT d
WHERE e.DEPTNO = d.DEPTNO
    AND LOC = 'DALLAS'
    AND SAL >= 1500;
-- 13
SELECT e1.ENAME, e1.SAL
FROM EMP e1, EMP e2
WHERE e1.MGR = e2.EMPNO
    AND e1.SAL > e2.SAL;
-- 14
SELECT ENAME, SAL, HIREDATE, DNAME
FROM EMP e, DEPT d
WHERE e.DEPTNO = d.DEPTNO
    AND 30 < (SYSDATE - HIREDATE) / 365;
-- 15
SELECT DNAME, COUNT(*)
FROM EMP e, DEPT d
WHERE e.DEPTNO = d.DEPTNO
    AND TO_CHAR(e.HIREDATE, 'YY') <= 82
GROUP BY DNAME;

-- WORKSHOP

SELECT DEPARTMENT_NAME, CAPACITY, -- CASE
    CASE WHEN CAPACITY >= 40 THEN '대강의실'
        WHEN CAPACITY >= 30 THEN '중강의실'
        ELSE '소강의실'
    END 강의실크기
FROM TB_DEPARTMENT
WHERE CATEGORY = '예체능'
ORDER BY CAPACITY DESC;

SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
JOIN TB_DEPARTMENT
USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '법학과'
ORDER BY PROFESSOR_SSN;