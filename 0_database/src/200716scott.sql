













SELECT TRUNC(4567.678), TRUNC(4567.678, 0), TRUNC(4567.678, 2), TRUNC(4567.678, -2)
FROM DUAL;

SELECT SYSDATE FROM DUAL;
SELECT SYSTIMESTAMP FROM DUAL;

-- 날짜연산
SELECT SYSDATE 오늘, SYSDATE + 1 내일, SYSDATE - 1 어제 FROM DUAL;

SELECT ENAME, HIREDATE, TRUNC((SYSDATE - HIREDATE) / 365) 년
FROM EMP
ORDER BY 년 DESC;
-- MONTHS_BETWEEN
SELECT ENAME, HIREDATE, SYSDATE,
    MONTHS_BETWEEN(SYSDATE, HIREDATE) m_between,
    TRUNC(MONTHS_BETWEEN(SYSDATE, HIREDATE)) t_between
FROM EMP
WHERE DEPTNO = 10
ORDER BY m_between DESC;
-- ADD_MONTHS
SELECT ENAME, HIREDATE,
    ADD_MONTHS(HIREDATE, 5) a_month,
    ADD_MONTHS(HIREDATE, -5) m_month
FROM EMP
WHERE DEPTNO = 10
ORDER BY HIREDATE DESC;

SELECT ENAME, HIREDATE, SYSDATE,
    SYSDATE - HIREDATE "TOTAL DAYS",
    TRUNC((SYSDATE - HIREDATE) / 7) WEEKS,
    ROUND(MOD(SYSDATE - HIREDATE, 7)) DAYS
FROM EMP
ORDER BY "TOTAL DAYS" DESC;
-- NEXT_DAY
SELECT EMPNO, ENAME, HIREDATE, NEXT_DAY(HIREDATE, 4)
FROM EMP
WHERE EMPNO = 7839;
-- LAST_DAY
-- ROUND, TRUNC
SELECT EMPNO, ENAME, HIREDATE,
    ROUND(HIREDATE, 'MONTH'),
    ROUND(HIREDATE, 'YEAR')
FROM EMP
WHERE EMPNO = 7839;

SELECT EMPNO, ENAME, HIREDATE,
    TRUNC(HIREDATE, 'MONTH'),
    TRUNC(HIREDATE, 'YEAR')
FROM EMP
WHERE EMPNO = 7839;

-- 형변환
-- 묵시적 형변환
SELECT EMPNO, ENAME
FROM EMP
WHERE EMPNO = '7900';
-- 명시적 형변환
SELECT EMPNO, ENAME
FROM EMP
WHERE EMPNO = TO_NUMBER('7900');
-- TO_CHAR
SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD,(AM) DY HH24:MI:SS')
FROM DUAL;

SELECT ENAME, HIREDATE, SAL
FROM EMP
WHERE TO_CHAR(HIREDATE, 'MM') = '09';

SELECT ENAME, HIREDATE, SAL
FROM EMP
WHERE TO_CHAR(HIREDATE, 'YY') = '81';
-- 문자열 안에 문자열 삽입
SELECT ENAME, HIREDATE,
    TO_CHAR(HIREDATE, 'YYYY"년" MM"월" DD"일"') 입사일
FROM EMP
WHERE DEPTNO = 10;
-- 단위구분
SELECT EMPNO, ENAME, JOB, SAL, TO_CHAR(SAL, '$999,999')
FROM EMP
WHERE DEPTNO = 20
ORDER BY SAL DESC;
-- TO_NUMBER
SELECT TO_NUMBER('1234') + 100 FROM DUAL;
-- TO_DATE
SELECT TO_DATE('20170802', 'YYYYMMDD') FROM DUAL;

ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY/MM/DD HH24:MI:SS';
SELECT TO_DATE('19990220181030', 'YYYYMMDDHH24MISS') FROM DUAL;

-- CASE 함수
SELECT EMPNO, ENAME, SAL, JOB,
    CASE JOB WHEN 'ANALYST'   THEN SAL * 1.1
             WHEN 'CLERK'     THEN SAL * 1.2
             WHEN 'MANAGER'   THEN SAL * 1.3
             WHEN 'PRESIDENT' THEN SAL * 1.4
             WHEN 'SALESMAN'  THEN SAL * 1.5
             ELSE SAL
    END "급여"
FROM EMP;
ALTER SESSION SET NLS_DATE_FORMAT = 'RR/MM/DD';

SELECT EMPNO, ENAME, SAL,
    CASE WHEN SAL >= 0   AND SAL <= 1000 THEN 'E'
         WHEN SAL > 1000 AND SAL <= 2000 THEN 'D'
         WHEN SAL > 2000 AND SAL <= 3000 THEN 'C'
         WHEN SAL > 3000 AND SAL <= 4000 THEN 'B'
         WHEN SAL > 4000 AND SAL <= 5000 THEN 'A'
    END "등급"
FROM EMP;

SELECT EMPNO, ENAME, SAL, JOB,
    DECODE(JOB, 'ANALYST'   , SAL * 1.1,
                'CLERK'     , SAL * 1.2,
                'MANAGER'   , SAL * 1.3,
                'PRESIDENT' , SAL * 1.4,
                'SALESMAN'  , SAL * 1.5, SAL) "급여"
FROM EMP;

-- 사원테이블에서 입사일이 12월인 사원의 사번, 사원명, 입사일 검색
SELECT EMPNO, ENAME, HIREDATE
FROM EMP
WHERE TO_CHAR(HIREDATE, 'MM') = '12';

SELECT EMPNO, ENAME, LPAD(SAL, 10, '*') 급여
FROM EMP;

SELECT EMPNO, ENAME, COMM,
    CASE WHEN COMM IS NULL THEN '일반사원'
        ELSE '영업사원'
    END 사원종류
FROM EMP;

SELECT LOC,
    DECODE(LOC, 'NEW YORK', 'EAST',
                'DALLAS', 'CENTER',
                'CHICAGO', 'CENTER',
                'BOSTON', 'EAST', 'WEST') AREA
FROM DEPT;

DESC TB_STUDENT;

SELECT STUDENT_NO, STUDENT_NAME,
    RPAD(SUBSTR(STUDENT_SSN, 1, 8), 14, '*') SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'N'
    AND STUDENT_NO LIKE 'A2%'
    AND STUDENT_ADDRESS LIKE '전주%';
    
-- SUM
SELECT SUM(DISTINCT SAL), SUM(ALL SAL), SUM(SAL)
FROM EMP;
-- AVG
SELECT SUM(SAL), AVG(SAL)
FROM EMP;
-- MAX, MIN
SELECT MAX(SAL), MIN(SAL)
FROM EMP;

SELECT MAX(HIREDATE), MIN(HIREDATE)
FROM EMP;

SELECT COUNT(ENAME), COUNT(COMM)
FROM EMP;

SELECT COUNT(JOB), COUNT(DISTINCT JOB)
FROM EMP;

SELECT COUNT(*)
FROM EMP;

SELECT AVG(SAL), MAX(SAL), MIN(SAL), SUM(SAL)
FROM EMP
WHERE JOB LIKE 'SAL%';

SELECT COUNT(*) C_INWON, COUNT(COMM) C_COMM,
    AVG(COMM) A_COMM, AVG(NVL(COMM, 0)) N_COMM,
    COUNT(DEPTNO) C_DEPT, COUNT(DISTINCT DEPTNO) C_DIS
FROM EMP;

SELECT * FROM EMP;

-- 단일 그룹함수는 일반 컬럼이랑 같이 출력X
SELECT DEPTNO, AVG(SAL)
FROM EMP;

SELECT DEPTNO, AVG(SAL)
FROM EMP
GROUP BY DEPTNO;

SELECT DEPNO, AVG(SAL)
FROM EMP
WHERE AVG(SAL) > 1500
GROUP BY DEPTNO;

SELECT DEPTNO, COUNT(*), AVG(SAL),
    MIN(SAL), MAX(SAL), SUM(SAL)
FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO 부서, COUNT(*), AVG(SAL),
    MIN(SAL), MAX(SAL), SUM(SAL)
FROM EMP
GROUP BY DEPTNO
ORDER BY SUM(SAL) DESC;

SELECT DEPTNO, JOB, COUNT(*), AVG(SAL), SUM(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO;

SELECT DEPTNO, SUM(SAL)
FROM EMP
GROUP BY DEPTNO
HAVING SUM(SAL) > 9000;

SELECT DEPTNO, SUM(SAL)
FROM EMP
WHERE SAL > 800
GROUP BY DEPTNO
HAVING SUM(SAL) > 9000;

SELECT DEPTNO, AVG(SAL), SUM(SAL)
FROM EMP
GROUP BY DEPTNO
HAVING MAX(SAL) > 2900;

SELECT JOB, AVG(SAL), SUM(SAL)
FROM EMP
GROUP BY JOB
HAVING AVG(SAL) >= 3000;

SELECT JOB, SUM(SAL) PAYROLL
FROM EMP
WHERE JOB NOT LIKE 'SALE%'
GROUP BY JOB
HAVING SUM(SAL) > 5000
ORDER BY PAYROLL DESC;

SELECT DEPTNO, AVG(SAL)
FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO
FROM EMP
GROUP BY DEPTNO
HAVING COUNT(*) >= 6;

SELECT TO_CHAR(HIREDATE, 'YYYY') 년,
    TO_CHAR(HIREDATE, 'MM') 월,
    SUM(SAL)
FROM EMP
GROUP BY TO_CHAR(HIREDATE, 'YYYY'), TO_CHAR(HIREDATE, 'MM')
ORDER BY 년;

SELECT * FROM EMP;
SELECT JOB, COUNT(JOB)
FROM EMP
GROUP BY JOB;

SELECT DECODE(JOB, 'CLERK', COUNT(JOB), 0) CLERK,
    DECODE(JOB, 'SALESMAN', COUNT(JOB), 0) SALESMAN,
    DECODE(JOB, 'MANAGER', COUNT(JOB), 0) MANAGER,
    DECODE(JOB, 'ANALYST', COUNT(JOB), 0) ANALYST,
    DECODE(JOB, 'PRESIDENT', COUNT(JOB), 0) PRESIDENT,
    COUNT(*)
FROM EMP
GROUP BY JOB;

SELECT COUNT(*) "학생 수"
FROM TB_STUDENT
WHERE DEPARTMENT_NO = 003
    AND TO_CHAR(ENTRANCE_DATE, 'YY') = '01';

SELECT COUNT(*) "학생 수"
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (
    SELECT DEPARTMENT_NO
    FROM TB_DEPARTMENT
    WHERE DEPARTMENT_NAME = '사학과'
) AND TO_CHAR(ENTRANCE_DATE, 'YY') = '01';

SELECT CATEGORY 계열, DEPARTMENT_NAME 학과이름, CAPACITY 정원
FROM TB_DEPARTMENT
WHERE CATEGORY = '공학'
    AND CAPACITY BETWEEN 20 AND 30
ORDER BY 학과이름;

SELECT CATEGORY 계열, COUNT(*) 학과수
FROM TB_DEPARTMENT
WHERE CATEGORY LIKE '%학%'
GROUP BY CATEGORY
ORDER BY 2 DESC;